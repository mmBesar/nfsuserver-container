# ─────────────────────────────────────────────────────────────────────────────
# Give the GITHUB_TOKEN permission to push packages
permissions:
  contents: read          # we only need to read the repo
  packages: write         # allow publishing to GitHub Container Registry

name: Build & Push per-arch Docker Image

on:
  push:
    paths:
      - 'Dockerfile'
      - 'Dockerfile.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      # 1. Checkout code
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2. Setup Buildx & QEMU
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Register QEMU for emulation
        uses: docker/setup-qemu-action@v2

      # 3. Log into GHCR using the token with packages: write
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Compute lowercase image name dynamically
      - name: Compute lowercase image name
        id: lowercase
        run: |
          IMAGE=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')
          echo "image_name=$IMAGE" >> $GITHUB_OUTPUT

      # 5. Build & push each architecture
      - name: Build and push ${{ matrix.arch }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: |
            ghcr.io/${{ steps.lowercase.outputs.image_name }}:latest-${{ matrix.arch }}
            ghcr.io/${{ steps.lowercase.outputs.image_name }}:${{ github.sha }}-${{ matrix.arch }}
